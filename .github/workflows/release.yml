name: Create release on new tag

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get tag name
        run: echo "REPO_TAG=$(echo "${{ github.ref_name }}" | sed 's/^v//')" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Get Go dependencies
        run: go get
      - name: Build Linux amd64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o grok3_api app-test.go
          tar -czvf grok3_api-${{ env.REPO_TAG }}-linux-amd64.tar.gz grok3_api
      - name: Build Windows amd64 (app-test)
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o app-test.exe app-test.go
          tar -czvf app-test-${{ env.REPO_TAG }}-windows-amd64.tar.gz app-test.exe
      - name: Build Windows amd64 (stable version)
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o app.exe 稳定版/app.go
          tar -czvf app-stable-${{ env.REPO_TAG }}-windows-amd64.tar.gz app.exe
      - name: Build Darwin amd64
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o grok3_api app-test.go
          tar -czvf grok3_api-${{ env.REPO_TAG }}-darwin-amd64.tar.gz grok3_api
      - name: Build Darwin arm64
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o grok3_api app-test.go
          tar -czvf grok3_api-${{ env.REPO_TAG }}-darwin-arm64.tar.gz grok3_api
      - name: Release artifacts
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.tar.gz"
